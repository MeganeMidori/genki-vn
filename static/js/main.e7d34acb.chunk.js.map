{"version":3,"sources":["characters/Mary.jsx","backgrounds/Classroom.jsx","scripts/newGame.js","scripts/chapter1.js","characters/Takeshi.jsx","characters/Kimura.jsx","characters/Sue.jsx","characters/Robert.jsx","App.js","serviceWorker.js","index.js"],"names":["sprite","emotion","className","src","alt","Mary","props","emotions","Classroom","url","contain","newGameScript","playerName","background","text","characters","speaker","reply","type","variable","choices","name","value","navigate","script","nationality","jobTitle","saveGame","Yamashita","style","height","objectFit","Kimura","Sue","Robert","SchoolBackground1","BlackBackground","color","LLSIFText","backgroundUrl","backgroundSize","backgroundPosition","nextButtonUrl","children","Friend","neutral","width","id","Scene1","gameState","useContext","GameStateContext","chapter1Script","assets","assetId","flipId","textComponent","NewGameScene","sampleScript","GameMenuBar","toComponent","onClick","resetState","MenuBackground","MyGameMenu","MyLoadGameMenu","MySaveGameMenu","App","href","componentKey","index","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e7d34acb.chunk.js","sourcesContent":["/*\nhttps://charat.me/en/genesis/create/\n\nbody: 0001\nnose: 0004\neyes: 0001\niris: 0007\neyebrows: 0007\nmouth: 0082\ncheeks: 0002\nbangs: 0110\nahoge: 0009\nhair: 0036\nshirt: 0052\nskirt: 0027\nsleeves: 0002\nsocks: 0011\nshoes: 0002\nhat: 0013\n*/\nimport React from 'react';\n// import '../index.css'\nimport {Character} from 'react-renai';\n\nconst sprite = (emotion) => <div className='charatme-container'><img src={`images/mary/${emotion}.png`} alt={`${emotion} mary`} /></div>\n\nconst Mary = (props) => {\n  const emotions = [\n    {\n      emotion: 'neutral',\n      sprite: sprite('neutral')\n    },\n    {\n      emotion: 'happy',\n      sprite: sprite('happy')\n    },\n    {\n      emotion: 'angry',\n      sprite: sprite('angry')\n    },\n    {\n      emotion: 'cringe',\n      sprite: sprite('cringe')\n    },\n    {\n      emotion: 'embarrassed',\n      sprite: sprite('embarrassed')\n    },\n    {\n      emotion: 'excited',\n      sprite: sprite('excited')\n    },\n    {\n      emotion: 'hungry',\n      sprite: sprite('hungry')\n    },\n    {\n      emotion: 'sad',\n      sprite: sprite('sad')\n    },\n    {\n      emotion: 'scared',\n      sprite: sprite('scared')\n    },\n    {\n      emotion: 'shy',\n      sprite: sprite('shy')\n    },\n    {\n      emotion: 'sleepy',\n      sprite: sprite('sleepy')\n    },\n    {\n      emotion: 'surprised',\n      sprite: sprite('surprised')\n    },\n    {\n      emotion: 'winded',\n      sprite: sprite('winded')\n    },\n  ]\n  return (<Character emotions={emotions} {...props} />)\n}\n\nexport default Mary;","import React from 'react'\nimport { Background } from 'react-renai'\n\nconst Classroom = (props) => {\n  return (<Background url=\"images/classroom/morning.jpg\" contain/>)\n}\n\nexport default Classroom;","const newGameScript = ({playerName}) => [\n  {\n    background: [\"blackBackground\"],\n    text: \"今日は日本語のクラスは始まります。\"\n  },\n  {\n    text: \"午前８時半ごろ学校へ行きます。\"\n  },\n  {\n    background: [\"blackBackground\", \"schoolBackground\"],\n    text: \"学校で私は少女を見る。\",\n  },\n  {\n    characters: [\"mary-neutral\"],\n    text: \"メアリー：おはようございます！げんき学園にようこそ。\",\n  },\n  {\n    characters: [\"mary-neutral\"],\n    text: \"メアリー：私の名前はメアリーです。\",\n    speaker: \"Shelby\",\n  },\n  {\n    text: \"メアリー：お名前は何ですか？\",\n    reply: {\n      type: \"input\",\n      variable: \"playerName\",\n    },\n  },\n  {\n    characters: [\"mary-happy\"],\n    text: `メアリー：初めまして${playerName}さん！`,\n  },\n  {\n    characters: [\"mary-neutral\"],\n    text: \"メアリー：私と一緒にクラスへ行きましょうか？\",\n    reply: {\n      type: \"select\",\n      choices: [\n        { name: \"はい！\", value: \"chapter1\", navigate: true },\n      ],\n    },\n  },\n  // {\n  //   ...likesGenki === \"true\"\n  //     ? {\n  //         characters: [\"shelby-happy\"],\n  //         text: \"いいですね！良かったです\",\n  //       }\n  //     : { characters: [\"shelby-neutral\"], text: \"残念ですね\" },\n  // },\n  // {\n  //   characters: [\"shelby-neutral\", \"friend\"],\n  //   text: \"お友達の名前は田中さんです\",\n  //   navigateTo: \"scene1\",\n  // },\n];\n\nexport default newGameScript;","const script = ({playerName, nationality, jobTitle}) => [\n  {\n    background: [\"blackBackground\", \"classroomBackground\"],\n    characters: [\"mary-neutral\", \"yamashita\"],\n    text: 'やました：クラスにようこそ。'\n  },\n  {\n    text: 'やました：私の名前はやましたです。げんき学院の先生です。'\n  },\n  {\n    characters: [\"yamashita\"],\n    text: 'やました：みんなさん座ってを下さい。'\n  },\n  {\n    text: 'やました：今日は「初めまして」と言います。メアリーさんどうぞ。'\n  },\n  {\n    characters: [\"mary-happy\"],\n    text: 'メアリー：は〜い！'\n  },\n  {\n    characters: [\"mary-neutral\"],\n    text: 'メアリー：初めまして。メアリー・ハートです。'\n  },\n  {\n    text: 'メアリー：アリゾナ大学生の学生です。今２年生です。先行は日本語です。'\n  },\n  {\n    text: 'メアリー：19歳です。よろしくお願いします。'\n  },\n  {\n    characters: [\"yamashita\"],\n    text: 'やました：どうも。次はきむらさん。'\n  },\n  {\n    characters: [\"kimura-neutral\"],\n    text: 'きむら：初めまして。きむら・たけしと申します。'\n  },\n  {\n    text: 'きむら：さくら大学の学生です。4年生です。先行は歴史です。'\n  },\n  {\n    text: 'きむら：22歳です。よろしくお願いします。'\n  },\n  {\n    characters: [\"yamashita\"],\n    text: 'やました：どうも。次はスーさん。'\n  },\n  {\n    characters: [\"sue-neutral\"],\n    text: 'スー：初めまして。スー・キムです。'\n  },\n  {\n    text: 'スー：ソウル大学の学生。3年生です。先行はコンピューター。'\n  },\n  {\n    text: 'スー：20歳です。よろしくお願いします。'\n  },\n  {\n    characters: [\"yamashita\"],\n    text: 'やまし：どうも。次はロバートさん。'\n  },\n  {\n    characters: [\"robert-neutral\"],\n    text: 'ロバート：初めまして。私の名前はロバート・スミスです。22歳です。'\n  },\n  {\n    text: 'ロバート：ロンドンの大学の学生です。４年生です。先行はビジネスです。'\n  },\n  {\n    text: 'ロバート：よろしくお願いします。'\n  },\n  {\n    characters: [\"yamashita\"],\n    text: `やました：どうも。最後は${playerName}さん。`\n  },\n  {\n    characters: [\"yamashita\",\"mary-neutral\", \"kimuara-neutral\", \"sue-neutral\", \"robert-neutral\"],\n    text: `初めまして。${playerName}です。`\n  },\n  {\n    text: 'ご出身は…',\n    reply: {\n      type: 'input',\n      variable: 'nationality',\n    }\n  },\n  {\n    text: `${nationality}人です。`,\n  },\n  {\n    text: 'お仕事は…',\n    reply: {\n      type: 'input',\n      variable: 'jobTitle',\n    }\n  },\n  {\n    text: `お仕事は${jobTitle}です。`,\n  },\n  {\n    text: `これから一所懸命頑張ります。よろしくお願いします。`,\n  },\n  {\n    characters: [\"yamashita\"],\n    text: 'やました：いいの。ありがとうみんなさん。今日のクラスは終わりました。'\n  },\n  {\n    characters: [\"mary-happy\", \"sue-neutral\"],\n    text: 'メアリー：ヨ！明日一緒に買い物行っていかない？'\n  },\n  {\n    text: '楽しそうですね。'\n  },\n  {\n    text: 'メアリー：じゃあ、電話番号は何ですか？',\n    reply: {\n      type: 'input',\n    }\n  },\n  {\n    text: 'メアリーさんの電話番号は何ですか？'\n  },\n  {\n    text: 'メアリー：電話番号は９３８の４９２の１０４６です。また明日ね！'\n  },\n  {\n    text: `To be continued...\nYou reached the end of chapter 1! Would you like to save your progress?`,\n    reply: {\n      type: \"select\",\n      choices: [\n        { name: \"Save game\", value: \"save\", navigate: true, saveGame: true },\n        { name: \"Main menu\", value: \"menu\", navigate: true},\n      ],\n    },\n  }\n]\n\nexport default script;","import React from 'react';\nimport {Character} from 'react-renai';\n\nconst sprite = (emotion) => <div className='charatme-container'><img src={`images/yamashita/${emotion}.png`} alt={`${emotion} yamashita`} style={{height: '300px',objectFit: 'contain',}} /></div>\n\nconst Yamashita = (props) => {\n  const emotions = [\n    {\n      emotion: 'neutral',\n      sprite: sprite('neutral')\n    },\n  ]\n  return (<Character emotions={emotions} {...props} />)\n}\n\nexport default Yamashita;","/*\nhttps://charat.me/en/genesis/create/\n\nbody: 0001\nnose: 0004\neyes: 0001\niris: 0007\neyebrows: 0007\nmouth: 0082\ncheeks: 0002\nbangs: 0110\nahoge: 0009\nhair: 0036\nshirt: 0052\nskirt: 0027\nsleeves: 0002\nsocks: 0011\nshoes: 0002\nhat: 0013\n*/\nimport React from 'react';\n// import '../index.css'\nimport {Character} from 'react-renai';\n\nconst sprite = (emotion) => <div className='charatme-container'><img src={`images/kimura/${emotion}.png`} alt={`${emotion} kimura`} /></div>\n\nconst Kimura = (props) => {\n  const emotions = [\n    {\n      emotion: 'neutral',\n      sprite: sprite('neutral')\n    },\n    {\n      emotion: 'happy',\n      sprite: sprite('happy')\n    },\n    {\n      emotion: 'angry',\n      sprite: sprite('angry')\n    },\n    {\n      emotion: 'cringe',\n      sprite: sprite('cringe')\n    },\n    {\n      emotion: 'embarrassed',\n      sprite: sprite('embarrassed')\n    },\n    {\n      emotion: 'excited',\n      sprite: sprite('excited')\n    },\n    {\n      emotion: 'hungry',\n      sprite: sprite('hungry')\n    },\n    {\n      emotion: 'sad',\n      sprite: sprite('sad')\n    },\n    {\n      emotion: 'scared',\n      sprite: sprite('scared')\n    },\n    {\n      emotion: 'shy',\n      sprite: sprite('shy')\n    },\n    {\n      emotion: 'sleepy',\n      sprite: sprite('sleepy')\n    },\n    {\n      emotion: 'surprised',\n      sprite: sprite('surprised')\n    },\n    {\n      emotion: 'winded',\n      sprite: sprite('winded')\n    },\n  ]\n  return (<Character emotions={emotions} {...props} />)\n}\n\nexport default Kimura;","import React from 'react';\nimport {Character} from 'react-renai';\n\nconst sprite = (emotion) => <div className='charatme-container'><img src={`images/sue/${emotion}.png`} alt={`${emotion} sue`} /></div>\n\nconst Sue = (props) => {\n  const emotions = [\n    {\n      emotion: 'neutral',\n      sprite: sprite('neutral')\n    },\n  ]\n  return (<Character emotions={emotions} {...props} />)\n}\n\nexport default Sue;","import React from 'react';\nimport {Character} from 'react-renai';\n\nconst sprite = (emotion) => <div className='charatme-container'><img src={`images/robert/${emotion}.png`} alt={`${emotion} robert`} /></div>\n\nconst Robert = (props) => {\n  const emotions = [\n    {\n      emotion: 'neutral',\n      sprite: sprite('neutral')\n    },\n  ]\n  return (<Character emotions={emotions} {...props} />)\n}\n\nexport default Robert;","import React, {useContext} from 'react'\nimport './App.css';\nimport '../node_modules/react-renai/dist/index.css'\n\nimport { SaveGameMenu, LoadGameMenu, Background, Text, Character, Scene, MenuBar, MenuButton, GameStateContext, Menu, GameWindow, DialogueHistory,  } from 'react-renai'\n\nimport Mary from './characters/Mary'\nimport Classroom from './backgrounds/Classroom'\nimport sampleScript from './scripts/newGame'\nimport chapter1Script from './scripts/chapter1'\nimport Yamashita from './characters/Takeshi'\nimport Kimura from './characters/Kimura'\nimport Sue from './characters/Sue'\nimport Robert from './characters/Robert'\n\nconst ParkBackground = (props) => {\n  return (\n    <Background\n      url=\"https://1.bp.blogspot.com/-ulgWMPg2zAg/WoAjyPSLOuI/AAAAAAAADzg/mu4B0wG7LhoP5UcUUA9qGvt4fZrgoFJFgCLcBGAs/s640/BG19_01.jpg\"\n      contain\n    />\n  );\n};\n\nconst SchoolBackground1 = () => {\n  return (\n    <Background\n      url=\"https://lemmasoft.renai.us/forums/download/file.php?id=15615&mode=view\"\n      contain\n    />\n  );\n};\n\nconst BlackBackground = (props) => {\n  return <Background color=\"black\" />;\n};\n\nconst LLSIFText = (props) => {\n  return (\n    <Text\n      backgroundUrl={''}\n      style={{\n        backgroundSize: \"cover\",\n        backgroundPosition: \"bottom center\",\n        height: \"60px\",\n        background: 'rgba(255,165,0,0.75)',\n        // border: '5px solid orange',\n      }}\n      nextButtonUrl={'images/nextarrow.png'}\n      {...props}\n    >\n      {props.children}\n    </Text>\n  );\n};\n\nconst Shelby = (props) => {\n  const neutral = {\n    emotion: \"neutral\",\n    sprite: (\n      <img\n        // src=\"https://cdn.dribbble.com/users/3862938/screenshots/13114438/media/c260ae2c9fbb7668aef2626c1e72ccca.png\"\n        src=\"images/Mary.png\"\n        style={{ width: \"160px\", objectFit: \"cover\" }}\n        alt=\"neutral shelby\"\n      />\n    ),\n  };\n  const happy = {\n    emotion: \"happy\",\n    sprite: (\n      <img\n        src=\"https://cdn.dribbble.com/users/3862938/screenshots/13057029/samantha_blushing.png\"\n        style={{ width: \"150px\", objectFit: \"cover\" }}\n        alt=\"happy shelby\"\n      />\n    ),\n  };\n\n  return <Character emotions={[neutral, happy]} id=\"shelby\" {...props} />;\n};\n\nconst Friend = (props) => {\n  const neutral = {\n    emotion: \"neutral\",\n    sprite: (\n      <img\n        src=\"https://cdn.dribbble.com/users/3862938/screenshots/13026802/media/3947055621ecc4f638ea3faf73f6e6e0.png\"\n        style={{ width: \"200px\", objectFit: \"cover\" }}\n        alt=\"neutral friend\"\n      />\n    ),\n  };\n\n  return <Character emotions={[neutral]} id=\"friend\" {...props} />;\n};\n\nconst Scene1 = () => {\n  const gameState = useContext(GameStateContext);\n  const script = chapter1Script(gameState);\n\n  const assets = [\n    <BlackBackground assetId=\"blackBackground\" />,\n    <Classroom assetId=\"classroomBackground\" />,\n    <Mary flipId=\"1\" assetId=\"mary-neutral\" />,\n    <Mary flipId=\"1\"　emotion=\"happy\" assetId=\"mary-happy\" />,\n    <Yamashita flipId=\"2\" assetId=\"yamashita\" />,\n    <Kimura flipId=\"3\" assetId=\"kimura-neutral\" />,\n    <Sue flipId=\"4\" assetId=\"sue-neutral\" />,\n    <Robert flipId=\"5\" assetId=\"robert-neutral\" />\n  ]\n\n  return (\n    <div>\n    <GameMenuBar />\n    <Scene script={script} assets={assets} textComponent={LLSIFText} />\n    </div>\n  );\n};\n\nconst NewGameScene = () => {\n  const gameState = useContext(GameStateContext);\n  const script = sampleScript(gameState);\n\n  const assets = [\n    <Mary assetId=\"mary-neutral\" flipId=\"1\" />,\n    <Mary assetId=\"mary-happy\" emotion=\"happy\" flipId=\"1\" />,\n    <Friend assetId=\"friend\" flipId=\"2\" />,\n    <BlackBackground assetId=\"blackBackground\" />,\n    <SchoolBackground1 assetId=\"schoolBackground\" />,\n    <LLSIFText assetId=\"llsif-text\" />,\n  ]\n\n  return (\n    <div>\n      <GameMenuBar />\n      {/* TODO: textcomponent should also passed in with the script instead of in the props */}\n      {/* TODO: but also maybe you can configure a default somewhere? */}\n      <Scene script={script} assets={assets} textComponent={LLSIFText} />\n    </div>\n  );\n};\n\nconst GameMenuBar = (props) => {\n  const gameState = useContext(GameStateContext);\n\n  return (\n    <MenuBar>\n      <MenuButton toComponent=\"dialogueHistory\">History</MenuButton>\n      <MenuButton toComponent=\"saveGameMenu\">Save</MenuButton>\n      <MenuButton toComponent=\"loadGameMenu\">Load</MenuButton>\n      <MenuButton toComponent=\"menu\" onClick={gameState.resetState}>\n        Main menu\n      </MenuButton>\n    </MenuBar>\n  );\n};\n\nconst MenuBackground = (props) => <div className=\"genki-background--container\">\n  <div>GEN</div>\n  <div>KI</div>\n</div>\n\nconst MyGameMenu = () => {\n  return (\n    <Menu>\n      <MenuBackground />\n      <MenuButton toComponent={\"newGame\"}>New Game</MenuButton>\n      <MenuButton toComponent={\"loadGameMenu\"}>Load</MenuButton>\n    </Menu>\n  );\n};\n\nconst MyLoadGameMenu = () => {\n  return (\n    <LoadGameMenu>\n      <MenuBackground />\n    </LoadGameMenu>\n  );\n}\n\nconst MySaveGameMenu = () => {\n  return (\n    <SaveGameMenu>\n      <MenuBackground />\n    </SaveGameMenu>\n  );\n}\n\nfunction App() {\n  return (\n    <div>\n    <p>\n      Welcome to Genki VN! I'm mainly writing this to practice what I've learned in Genki so far. Chapters will be added as I study.\n    </p>\n    <p>\n      I tried to use only vocabulary and grammar skills learned up to the given chapter. Because of that, the story is rather limited in the initial chapters ^^\n    </p>\n    <p>\n    In certain cases I need to borrow more advanced vocabulary in order to fill in the gaps between phrases taught within the chapter. I also chose to include kanji from the beginning, although it is not intorduced in Genki until later chapters. To aid your understanding I recommend using <a href=\"https://chrome.google.com/webstore/detail/ipa-furigana/jnnbgnfnncobhklficfkdnclohaklifi?hl=en\">IPA Furigana extension for chrome</a> as well as <a href=\"https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb?hl=en\">Google Translate extension</a>. With these installed, you can click the ふ in your browser to toggle furigana, and you can highlight any words you do not recognize to look up the meaning with google translate. I'm learning japanese as I go along, so take all of this with a grain of salt of course!\n    </p>\n    <p>Most character art was generated using <a href=\"https://charat.me/en/genesis/create/\">Charat</a> and most background assets are from <a href=\"https://lemmasoft.renai.us/forums/viewtopic.php?t=17302\">here</a></p>\n    <p>\n      By the way, this is an early test use of my <a href=\"https://github.com/MeganeMidori/react-renai\">react-renai library</a>. Check it out if you're into that kind of thing!\n    </p>\n    <GameWindow>\n      <MyGameMenu componentKey=\"menu\" index />\n      <DialogueHistory componentKey=\"dialogueHistory\" />\n      <NewGameScene componentKey=\"newGame\" />\n      <Scene1 componentKey=\"chapter1\" />\n      <MyLoadGameMenu componentKey=\"loadGameMenu\" />\n      <MySaveGameMenu componentKey=\"saveGameMenu\" />\n    </GameWindow>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}